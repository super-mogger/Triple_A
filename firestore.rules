rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Simple check for authentication
    function isAuthenticated() {
      return request.auth != null;
    }

    // Super admin is always allowed access
    function isSuperAdmin() {
      return request.auth.token.email == "rawatamit446@gmail.com";
    }

    // Super admin override - always gives full access
    match /{document=**} {
      allow read, write: if isAuthenticated() && isSuperAdmin();
    }

    // Check if user is an admin without complex lookups
    match /admins/{adminId} {
      // Everyone can read admins collection
      allow read: if isAuthenticated();
      
      // Super admin can always write; other admins can write if they exist in collection
      allow write: if isAuthenticated() && (
        isSuperAdmin() || 
        // Direct document ID match
        adminId == request.auth.uid || 
        adminId == request.auth.token.email
      );
    }

    // Give broad access to critical collections
    match /memberships/{membershipId} {
      allow read, write: if isAuthenticated();
    }
    
    match /profiles/{profileId} {
      allow read, write: if isAuthenticated();
    }
    
    match /attendance/{attendanceId} {
      allow read, write: if isAuthenticated();
    }
    
    match /payments/{paymentId} {
      allow read, write: if isAuthenticated();
    }
    
    match /notifications/{notificationId} {
      allow read, write: if isAuthenticated();
    }
    
    match /holidays/{holidayId} {
      allow read, write: if isAuthenticated();
    }
    
    // Add rule for attendanceStats collection
    match /attendanceStats/{statId} {
      // Allow users to read any stats
      allow read: if isAuthenticated();
      // Allow users to write only to their own stats document
      allow write: if isAuthenticated() && (
        isSuperAdmin() || 
        exists(/databases/$(database)/documents/admins/$(request.auth.token.email)) ||
        statId == request.auth.uid
      );
    }
    
    // Add rule for trainerAssignments collection
    match /trainerAssignments/{assignmentId} {
      // Allow authenticated users to read
      allow read: if isAuthenticated();
      // Only admins can write to trainer assignments
      allow write: if isAuthenticated() && (
        isSuperAdmin() || 
        exists(/databases/$(database)/documents/admins/$(request.auth.token.email))
      );
    }
    
    // Add rule for trainerRequests collection
    match /trainerRequests/{requestId} {
      // Allow authenticated users to read their own requests
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        isSuperAdmin() || 
        exists(/databases/$(database)/documents/admins/$(request.auth.token.email))
      );
      
      // Allow users to create their own requests
      allow create: if isAuthenticated();
      
      // Allow admins to update and delete any request
      allow update, delete: if isAuthenticated() && (
        isSuperAdmin() || 
        exists(/databases/$(database)/documents/admins/$(request.auth.token.email))
      );
    }
    
    // Fallback rule for everything else
    match /{document=**} {
      allow read: if isAuthenticated();
      // Super admin or a user in the admins collection can write
      allow write: if isAuthenticated() && (
        isSuperAdmin() || 
        exists(/databases/$(database)/documents/admins/$(request.auth.token.email))
      );
    }
  }
}
